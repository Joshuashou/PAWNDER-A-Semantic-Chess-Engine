{"ast":null,"code":"import{useEffect,useRef}from\"react\";const useStockfishEngine=_ref=>{let{onEvaluation}=_ref;const engineRef=useRef(null);const analysisRef=useRef([]);useEffect(()=>{const stockfish=new Worker(\"/stockfish/stockfish-16.1.js\");engineRef.current=stockfish;const handleMessage=event=>{const data=event.data;console.log(\"Received data:\");if(data.startsWith(\"info\")){// Capture multipv analysis with scores\nconst match=data.match(/multipv (\\d+).*score (cp|mate) ([-+]?\\d+).*pv (\\w+)/);if(match){const[,multipv,type,score,move]=match;analysisRef.current[multipv-1]={score:type==='cp'?parseInt(score):Infinity*Math.sign(score),move};}}else if(data.startsWith(\"bestmove\")){// Send sorted top moves when analysis completes\nconst topMoves=analysisRef.current.filter(Boolean).sort((a,b)=>b.score-a.score).map(m=>m.move);onEvaluation(topMoves);analysisRef.current=[];}};stockfish.addEventListener(\"message\",handleMessage);stockfish.postMessage(\"uci\");stockfish.postMessage(\"setoption name MultiPV value 5\");// Get top 5 moves\nreturn()=>{stockfish.removeEventListener(\"message\",handleMessage);stockfish.terminate();};},[onEvaluation]);const sendCommand=cmd=>{var _engineRef$current;(_engineRef$current=engineRef.current)===null||_engineRef$current===void 0?void 0:_engineRef$current.postMessage(cmd);};return{sendCommand};};export default useStockfishEngine;","map":{"version":3,"names":["useEffect","useRef","useStockfishEngine","_ref","onEvaluation","engineRef","analysisRef","stockfish","Worker","current","handleMessage","event","data","console","log","startsWith","match","multipv","type","score","move","parseInt","Infinity","Math","sign","topMoves","filter","Boolean","sort","a","b","map","m","addEventListener","postMessage","removeEventListener","terminate","sendCommand","cmd","_engineRef$current"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/useStockfishEngine.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst useStockfishEngine = ({ onEvaluation }) => {\n    const engineRef = useRef(null);\n    const analysisRef = useRef([]);\n\n    useEffect(() => {\n        const stockfish = new Worker(\"/stockfish/stockfish-16.1.js\");\n        engineRef.current = stockfish;\n\n        const handleMessage = (event) => {\n            const data = event.data;\n            console.log(\"Received data:\");\n            \n            if (data.startsWith(\"info\")) {\n                // Capture multipv analysis with scores\n                const match = data.match(/multipv (\\d+).*score (cp|mate) ([-+]?\\d+).*pv (\\w+)/);\n                if (match) {\n                    const [, multipv, type, score, move] = match;\n                    analysisRef.current[multipv - 1] = {\n                        score: type === 'cp' ? parseInt(score) : Infinity * Math.sign(score),\n                        move\n                    };\n                }\n            }\n            else if (data.startsWith(\"bestmove\")) {\n                // Send sorted top moves when analysis completes\n                const topMoves = analysisRef.current\n                    .filter(Boolean)\n                    .sort((a, b) => b.score - a.score)\n                    .map(m => m.move);\n                \n                onEvaluation(topMoves);\n                analysisRef.current = [];\n            }\n        };\n\n        stockfish.addEventListener(\"message\", handleMessage);\n        stockfish.postMessage(\"uci\");\n        stockfish.postMessage(\"setoption name MultiPV value 5\"); // Get top 5 moves\n\n        return () => {\n            stockfish.removeEventListener(\"message\", handleMessage);\n            stockfish.terminate();\n        };\n    }, [onEvaluation]);\n\n    const sendCommand = (cmd) => {\n        engineRef.current?.postMessage(cmd);\n    };\n\n    return { sendCommand };\n};\n\nexport default useStockfishEngine;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CACxC,KAAM,CAAAE,SAAS,CAAGJ,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAK,WAAW,CAAGL,MAAM,CAAC,EAAE,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAO,SAAS,CAAG,GAAI,CAAAC,MAAM,CAAC,8BAA8B,CAAC,CAC5DH,SAAS,CAACI,OAAO,CAAGF,SAAS,CAE7B,KAAM,CAAAG,aAAa,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACC,IAAI,CACvBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAE7B,GAAIF,IAAI,CAACG,UAAU,CAAC,MAAM,CAAC,CAAE,CACzB;AACA,KAAM,CAAAC,KAAK,CAAGJ,IAAI,CAACI,KAAK,CAAC,qDAAqD,CAAC,CAC/E,GAAIA,KAAK,CAAE,CACP,KAAM,EAAGC,OAAO,CAAEC,IAAI,CAAEC,KAAK,CAAEC,IAAI,CAAC,CAAGJ,KAAK,CAC5CV,WAAW,CAACG,OAAO,CAACQ,OAAO,CAAG,CAAC,CAAC,CAAG,CAC/BE,KAAK,CAAED,IAAI,GAAK,IAAI,CAAGG,QAAQ,CAACF,KAAK,CAAC,CAAGG,QAAQ,CAAGC,IAAI,CAACC,IAAI,CAACL,KAAK,CAAC,CACpEC,IACJ,CAAC,CACL,CACJ,CAAC,IACI,IAAIR,IAAI,CAACG,UAAU,CAAC,UAAU,CAAC,CAAE,CAClC;AACA,KAAM,CAAAU,QAAQ,CAAGnB,WAAW,CAACG,OAAO,CAC/BiB,MAAM,CAACC,OAAO,CAAC,CACfC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAACX,KAAK,CAAGU,CAAC,CAACV,KAAK,CAAC,CACjCY,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACZ,IAAI,CAAC,CAErBhB,YAAY,CAACqB,QAAQ,CAAC,CACtBnB,WAAW,CAACG,OAAO,CAAG,EAAE,CAC5B,CACJ,CAAC,CAEDF,SAAS,CAAC0B,gBAAgB,CAAC,SAAS,CAAEvB,aAAa,CAAC,CACpDH,SAAS,CAAC2B,WAAW,CAAC,KAAK,CAAC,CAC5B3B,SAAS,CAAC2B,WAAW,CAAC,gCAAgC,CAAC,CAAE;AAEzD,MAAO,IAAM,CACT3B,SAAS,CAAC4B,mBAAmB,CAAC,SAAS,CAAEzB,aAAa,CAAC,CACvDH,SAAS,CAAC6B,SAAS,CAAC,CAAC,CACzB,CAAC,CACL,CAAC,CAAE,CAAChC,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAiC,WAAW,CAAIC,GAAG,EAAK,KAAAC,kBAAA,CACzB,CAAAA,kBAAA,CAAAlC,SAAS,CAACI,OAAO,UAAA8B,kBAAA,iBAAjBA,kBAAA,CAAmBL,WAAW,CAACI,GAAG,CAAC,CACvC,CAAC,CAED,MAAO,CAAED,WAAY,CAAC,CAC1B,CAAC,CAED,cAAe,CAAAnC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}