{"ast":null,"code":"import{useEffect,useRef,useCallback}from\"react\";const useStockfishEngine=_ref=>{let{onEvaluation}=_ref;const engineRef=useRef(null);const onEvaluationRef=useRef(onEvaluation);const isReadyRef=useRef(false);// Keep callback updated\nuseEffect(()=>{onEvaluationRef.current=onEvaluation;},[onEvaluation]);useEffect(()=>{console.log(\"Initializing Stockfish engine\");const stockfish=new Worker(\"/workers/stockfish-16.1.js\");// Updated path\nengineRef.current=stockfish;// Use worker.onmessage to handle Stockfish responses\nstockfish.onmessage=event=>{const data=event.data;console.log(\"[Stockfish] Received:\",data);if(data===\"uciok\"){console.log(\"Stockfish UCI ready\");isReadyRef.current=true;// Configure engine\nstockfish.postMessage(\"setoption name MultiPV value 5\");stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");stockfish.postMessage(\"isready\");}else if(data===\"readyok\"){console.log(\"Stockfish ready for commands\");}else if(data.startsWith(\"info\")){console.log(\"Analysis info:\",data);// Parse best moves here\n}else if(data.startsWith(\"bestmove\")){console.log(\"Best move received:\",data);const move=data.split(\" \")[1];if(move&&move!==\"(none)\"){onEvaluationRef.current([move]);}}};// Initialize UCI protocol\nconsole.log(\"Starting UCI protocol\");stockfish.postMessage(\"uci\");return()=>{console.log(\"Cleaning up Stockfish\");stockfish.terminate();};},[]);const sendCommand=useCallback(cmd=>{if(!engineRef.current||!isReadyRef.current){console.error(\"Engine not ready\");return;}console.log(\"[Stockfish] Sending command:\",cmd);engineRef.current.postMessage(cmd);},[]);return{sendCommand};};export default useStockfishEngine;","map":{"version":3,"names":["useEffect","useRef","useCallback","useStockfishEngine","_ref","onEvaluation","engineRef","onEvaluationRef","isReadyRef","current","console","log","stockfish","Worker","onmessage","event","data","postMessage","startsWith","move","split","terminate","sendCommand","cmd","error"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/useStockfishEngine.js"],"sourcesContent":["import { useEffect, useRef, useCallback } from \"react\";\n\nconst useStockfishEngine = ({ onEvaluation }) => {\n    const engineRef = useRef(null);\n    const onEvaluationRef = useRef(onEvaluation);\n    const isReadyRef = useRef(false);\n\n    // Keep callback updated\n    useEffect(() => {\n        onEvaluationRef.current = onEvaluation;\n    }, [onEvaluation]);\n\n    useEffect(() => {\n        console.log(\"Initializing Stockfish engine\");\n        const stockfish = new Worker(\"/workers/stockfish-16.1.js\"); // Updated path\n        engineRef.current = stockfish;\n\n        // Use worker.onmessage to handle Stockfish responses\n        stockfish.onmessage = (event) => {\n            const data = event.data;\n            console.log(\"[Stockfish] Received:\", data);\n\n            if (data === \"uciok\") {\n                console.log(\"Stockfish UCI ready\");\n                isReadyRef.current = true;\n                // Configure engine\n                stockfish.postMessage(\"setoption name MultiPV value 5\");\n                stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");\n                stockfish.postMessage(\"isready\");\n            }\n            else if (data === \"readyok\") {\n                console.log(\"Stockfish ready for commands\");\n            }\n            else if (data.startsWith(\"info\")) {\n                console.log(\"Analysis info:\", data);\n                // Parse best moves here\n            }\n            else if (data.startsWith(\"bestmove\")) {\n                console.log(\"Best move received:\", data);\n                const move = data.split(\" \")[1];\n                if (move && move !== \"(none)\") {\n                    onEvaluationRef.current([move]);\n                }\n            }\n        };\n\n        // Initialize UCI protocol\n        console.log(\"Starting UCI protocol\");\n        stockfish.postMessage(\"uci\");\n\n        return () => {\n            console.log(\"Cleaning up Stockfish\");\n            stockfish.terminate();\n        };\n    }, []);\n\n    const sendCommand = useCallback((cmd) => {\n        if (!engineRef.current || !isReadyRef.current) {\n            console.error(\"Engine not ready\");\n            return;\n        }\n        console.log(\"[Stockfish] Sending command:\", cmd);\n        engineRef.current.postMessage(cmd);\n    }, []);\n\n    return { sendCommand };\n};\n\nexport default useStockfishEngine;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CAEtD,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CACxC,KAAM,CAAAE,SAAS,CAAGL,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAM,eAAe,CAAGN,MAAM,CAACI,YAAY,CAAC,CAC5C,KAAM,CAAAG,UAAU,CAAGP,MAAM,CAAC,KAAK,CAAC,CAEhC;AACAD,SAAS,CAAC,IAAM,CACZO,eAAe,CAACE,OAAO,CAAGJ,YAAY,CAC1C,CAAC,CAAE,CAACA,YAAY,CAAC,CAAC,CAElBL,SAAS,CAAC,IAAM,CACZU,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,MAAM,CAAC,4BAA4B,CAAC,CAAE;AAC5DP,SAAS,CAACG,OAAO,CAAGG,SAAS,CAE7B;AACAA,SAAS,CAACE,SAAS,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACC,IAAI,CACvBN,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEK,IAAI,CAAC,CAE1C,GAAIA,IAAI,GAAK,OAAO,CAAE,CAClBN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAClCH,UAAU,CAACC,OAAO,CAAG,IAAI,CACzB;AACAG,SAAS,CAACK,WAAW,CAAC,gCAAgC,CAAC,CACvDL,SAAS,CAACK,WAAW,CAAC,wCAAwC,CAAC,CAC/DL,SAAS,CAACK,WAAW,CAAC,SAAS,CAAC,CACpC,CAAC,IACI,IAAID,IAAI,GAAK,SAAS,CAAE,CACzBN,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC/C,CAAC,IACI,IAAIK,IAAI,CAACE,UAAU,CAAC,MAAM,CAAC,CAAE,CAC9BR,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEK,IAAI,CAAC,CACnC;AACJ,CAAC,IACI,IAAIA,IAAI,CAACE,UAAU,CAAC,UAAU,CAAC,CAAE,CAClCR,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEK,IAAI,CAAC,CACxC,KAAM,CAAAG,IAAI,CAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC/B,GAAID,IAAI,EAAIA,IAAI,GAAK,QAAQ,CAAE,CAC3BZ,eAAe,CAACE,OAAO,CAAC,CAACU,IAAI,CAAC,CAAC,CACnC,CACJ,CACJ,CAAC,CAED;AACAT,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACpCC,SAAS,CAACK,WAAW,CAAC,KAAK,CAAC,CAE5B,MAAO,IAAM,CACTP,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACpCC,SAAS,CAACS,SAAS,CAAC,CAAC,CACzB,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,WAAW,CAAGpB,WAAW,CAAEqB,GAAG,EAAK,CACrC,GAAI,CAACjB,SAAS,CAACG,OAAO,EAAI,CAACD,UAAU,CAACC,OAAO,CAAE,CAC3CC,OAAO,CAACc,KAAK,CAAC,kBAAkB,CAAC,CACjC,OACJ,CACAd,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEY,GAAG,CAAC,CAChDjB,SAAS,CAACG,OAAO,CAACQ,WAAW,CAACM,GAAG,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAED,WAAY,CAAC,CAC1B,CAAC,CAED,cAAe,CAAAnB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}