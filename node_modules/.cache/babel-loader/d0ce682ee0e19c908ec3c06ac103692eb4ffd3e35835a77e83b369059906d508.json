{"ast":null,"code":"var _jsxFileName = \"/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chessground from \"@react-chess/chessground\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  _s();\n  const [config, setConfig] = useState({\n    draggable: {\n      enabled: true\n    },\n    movable: {\n      free: false,\n      color: \"white\"\n    }\n  });\n  const sendMove = (orig, dest) => {\n    fetch(\"/make_move\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        move: `${orig}${dest}`\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.validMoves) {\n        setConfig(prevConfig => ({\n          ...prevConfig,\n          movable: {\n            ...prevConfig.movable,\n            dests: new Map(Object.entries(data.validMoves))\n          }\n        }));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Chessground, {\n    width: 600,\n    height: 600,\n    config: {\n      ...config,\n      events: {\n        move: sendMove\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"osAzKK6ZIy4iSIR/YcRhssZxI+g=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","Chessground","jsxDEV","_jsxDEV","ChessBoard","_s","config","setConfig","draggable","enabled","movable","free","color","sendMove","orig","dest","fetch","method","headers","body","JSON","stringify","move","then","response","json","data","validMoves","prevConfig","dests","Map","Object","entries","width","height","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/ChessBoard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Chessground from \"@react-chess/chessground\";\n\nconst ChessBoard = () => {\n  const [config, setConfig] = useState({\n    draggable: { enabled: true },\n    movable: {\n      free: false,\n      color: \"white\",\n    },\n  });\n\n  const sendMove = (orig, dest) => {\n    fetch(\"/make_move\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ move: `${orig}${dest}` }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.validMoves) {\n          setConfig((prevConfig) => ({\n            ...prevConfig,\n            movable: { ...prevConfig.movable, dests: new Map(Object.entries(data.validMoves)) },\n          }));\n        }\n      });\n  };\n\n  return (\n    <Chessground\n      width={600}\n      height={600}\n      config={{\n        ...config,\n        events: {\n          move: sendMove,\n        },\n      }}\n    />\n  );\n};\n\nexport default ChessBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,SAAS,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC;IAC5BC,OAAO,EAAE;MACPC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE;IACT;EACF,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;IAC/BC,KAAK,CAAC,YAAY,EAAE;MAClBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,IAAI,EAAG,GAAER,IAAK,GAAEC,IAAK;MAAE,CAAC;IACjD,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,UAAU,EAAE;QACnBpB,SAAS,CAAEqB,UAAU,KAAM;UACzB,GAAGA,UAAU;UACblB,OAAO,EAAE;YAAE,GAAGkB,UAAU,CAAClB,OAAO;YAAEmB,KAAK,EAAE,IAAIC,GAAG,CAACC,MAAM,CAACC,OAAO,CAACN,IAAI,CAACC,UAAU,CAAC;UAAE;QACpF,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACExB,OAAA,CAACF,WAAW;IACVgC,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZ5B,MAAM,EAAE;MACN,GAAGA,MAAM;MACT6B,MAAM,EAAE;QACNb,IAAI,EAAET;MACR;IACF;EAAE;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAClC,EAAA,CAxCID,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}