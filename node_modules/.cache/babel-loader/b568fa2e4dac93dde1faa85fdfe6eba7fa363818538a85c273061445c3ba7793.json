{"ast":null,"code":"import React,{useEffect,useRef,useState,useCallback}from\"react\";import{Chessground}from\"chessground\";import{Chess}from\"chess.js\";import useStockfishEngine from\"./useStockfishEngine\";import\"../../node_modules/chessground/assets/chessground.base.css\";import\"../../node_modules/chessground/assets/chessground.brown.css\";import\"../../node_modules/chessground/assets/chessground.cburnett.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChessBoard=()=>{const boardRef=useRef(null);const chess=useRef(new Chess());const groundRef=useRef(null);const[topMoves,setTopMoves]=useState([]);const[fen,setFen]=useState(chess.current.fen());const turn=chess.current.turn()==='w'?'white':'black';const[analysis,setAnalysis]=useState(\"\");const[isLoading,setIsLoading]=useState(false);console.log(\"Hi\");const handleEvaluation=useCallback(data=>{console.log(\"handleEvaluation called\");setTopMoves(parseStockfishOutput(data));},[]);const{sendCommand,analysisLines}=useStockfishEngine({onEvaluation:handleEvaluation});const getDests=useCallback(()=>{const dests=new Map();chess.current.moves({verbose:true}).forEach(move=>{dests.set(move.from,(dests.get(move.from)||[]).concat(move.to));});return dests;},[fen]);const handleMove=useCallback((orig,dest)=>{try{const move=chess.current.move({from:orig,to:dest,promotion:\"q\"});if(!move)return\"snapback\";const newFen=chess.current.fen();setFen(newFen);if(sendCommand){console.log(\"stockfish sending move command\");sendCommand(\"position fen \".concat(newFen));sendCommand(\"go depth 15\");}}catch(error){console.error(\"Move error:\",error);}},[sendCommand]);useEffect(()=>{groundRef.current=Chessground(boardRef.current,{fen,turnColor:turn,movable:{color:turn,free:false,dests:getDests(),events:{after:handleMove}},highlight:{lastMove:true,check:true}});return()=>{var _groundRef$current;return(_groundRef$current=groundRef.current)===null||_groundRef$current===void 0?void 0:_groundRef$current.destroy();};},[]);useEffect(()=>{var _groundRef$current2;(_groundRef$current2=groundRef.current)===null||_groundRef$current2===void 0?void 0:_groundRef$current2.set({fen,turnColor:turn,movable:{color:turn,dests:getDests()}});},[fen,turn,getDests]);const parseStockfishOutput=output=>{if(Array.isArray(output)){// If the output is already an array, return it directly\nreturn output.slice(0,5);}if(typeof output!==\"string\"){console.error(\"Invalid output:\",output);return[];}// Parse the string output\nconst matches=[];const regex=/pv\\s+(\\w+)/g;let match;while((match=regex.exec(output))!==null){matches.push(match[1]);}return matches.slice(0,5);};const handlePawnderClick=async()=>{try{setIsLoading(true);setAnalysis(\"Pawndering the reasoning behind the previous move...\");const currentPosition=chess.current.fen();const moves=chess.current.history();const lastMove=moves[moves.length-1];// Create a temporary chess instance to get the previous position\nconst tempChess=new Chess();// Replay all moves except the last one\nfor(let i=0;i<moves.length-1;i++){tempChess.move(moves[i]);}const previousPosition=tempChess.fen();const response=await fetch('http://127.0.0.1:5000/pawnder_move',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json','Origin':'http://localhost:3000'},mode:'cors',credentials:'same-origin',body:JSON.stringify({move:lastMove,position:currentPosition,previous_position:previousPosition})});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();setAnalysis(data.analysis);// Store the analysis in state\nconsole.log(\"Received from backend:\",data);}catch(error){console.error(\"Error sending position to backend:\",error);setAnalysis(\"Error getting analysis\");}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{ref:boardRef,style:{width:\"400px\",height:\"400px\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePawnderClick,style:{marginTop:\"10px\",padding:\"10px 20px\",fontSize:\"16px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"5px\",cursor:\"pointer\"},children:\"Pawnder Why!\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"10px\",padding:\"15px\",border:\"1px solid #ccc\",borderRadius:\"5px\",backgroundColor:\"#f9f9f9\",minHeight:\"100px\",maxWidth:\"400px\",whiteSpace:\"pre-wrap\"},children:analysis||\"Click 'Pawnder Why!' to get move analysis\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:\"200px\",marginLeft:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Top Moves\"}),analysisLines.map((line,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Line \",index+1,\":\"]}),line.score&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Score: \",line.scoreType==='cp'?line.score/100:\"Mate in \".concat(line.score)]}),line.pv&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Moves: \",line.pv.join(' ')]})]},index))]})]});};export default ChessBoard;","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Chessground","Chess","useStockfishEngine","jsx","_jsx","jsxs","_jsxs","ChessBoard","boardRef","chess","groundRef","topMoves","setTopMoves","fen","setFen","current","turn","analysis","setAnalysis","isLoading","setIsLoading","console","log","handleEvaluation","data","parseStockfishOutput","sendCommand","analysisLines","onEvaluation","getDests","dests","Map","moves","verbose","forEach","move","set","from","get","concat","to","handleMove","orig","dest","promotion","newFen","error","turnColor","movable","color","free","events","after","highlight","lastMove","check","_groundRef$current","destroy","_groundRef$current2","output","Array","isArray","slice","matches","regex","match","exec","push","handlePawnderClick","currentPosition","history","length","tempChess","i","previousPosition","response","fetch","method","headers","mode","credentials","body","JSON","stringify","position","previous_position","ok","Error","status","json","style","display","children","ref","width","height","onClick","marginTop","padding","fontSize","backgroundColor","border","borderRadius","cursor","minHeight","maxWidth","whiteSpace","marginLeft","map","line","index","score","scoreType","pv","join"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/ChessBoard.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Chessground } from \"chessground\";\nimport { Chess } from \"chess.js\";\nimport useStockfishEngine from \"./useStockfishEngine\";\nimport \"../../node_modules/chessground/assets/chessground.base.css\";\nimport \"../../node_modules/chessground/assets/chessground.brown.css\";\nimport \"../../node_modules/chessground/assets/chessground.cburnett.css\";\n\nconst ChessBoard = () => {\n  const boardRef = useRef(null);\n  const chess = useRef(new Chess());\n  const groundRef = useRef(null);\n  const [topMoves, setTopMoves] = useState([]);\n  const [fen, setFen] = useState(chess.current.fen());\n  const turn = chess.current.turn() === 'w' ? 'white' : 'black';\n  const [analysis, setAnalysis] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(\"Hi\")\n\n  const handleEvaluation = useCallback((data) => {\n    console.log(\"handleEvaluation called\");\n    setTopMoves(parseStockfishOutput(data));\n  }, []);\n\n  const { sendCommand, analysisLines } = useStockfishEngine({ onEvaluation: handleEvaluation });\n\n  const getDests = useCallback(() => {\n    const dests = new Map();\n    chess.current.moves({ verbose: true }).forEach(move => {\n      dests.set(move.from, (dests.get(move.from) || []).concat(move.to));\n    });\n    return dests;\n  }, [fen]);\n\n  const handleMove = useCallback((orig, dest) => {\n    try {\n      const move = chess.current.move({ from: orig, to: dest, promotion: \"q\" });\n      if (!move) return \"snapback\";\n      \n      const newFen = chess.current.fen();\n      setFen(newFen);\n      \n      if (sendCommand) {\n        console.log(\"stockfish sending move command\");\n        sendCommand(`position fen ${newFen}`);\n        sendCommand(\"go depth 15\");\n      }\n    } catch (error) {\n      console.error(\"Move error:\", error);\n    }\n  }, [sendCommand]);\n\n  useEffect(() => {\n    groundRef.current = Chessground(boardRef.current, {\n      fen,\n      turnColor: turn,\n      movable: {\n        color: turn,\n        free: false,\n        dests: getDests(),\n        events: { after: handleMove }\n      },\n      highlight: { lastMove: true, check: true }\n    });\n\n    return () => groundRef.current?.destroy();\n  }, []);\n\n  useEffect(() => {\n    groundRef.current?.set({\n      fen,\n      turnColor: turn,\n      movable: { color: turn, dests: getDests() }\n    });\n  }, [fen, turn, getDests]);\n\n  const parseStockfishOutput = (output) => {\n    if (Array.isArray(output)) {\n      // If the output is already an array, return it directly\n      return output.slice(0, 5);\n    }\n  \n    if (typeof output !== \"string\") {\n      console.error(\"Invalid output:\", output);\n      return [];\n    }\n  \n    // Parse the string output\n    const matches = [];\n    const regex = /pv\\s+(\\w+)/g;\n    let match;\n    while ((match = regex.exec(output)) !== null) {\n      matches.push(match[1]);\n    }\n    return matches.slice(0, 5);\n  };\n\n  const handlePawnderClick = async () => {\n    try {\n        setIsLoading(true);\n        setAnalysis(\"Pawndering the reasoning behind the previous move...\");\n\n        const currentPosition = chess.current.fen();\n        const moves = chess.current.history();\n        const lastMove = moves[moves.length - 1];\n        \n        // Create a temporary chess instance to get the previous position\n        const tempChess = new Chess();\n        // Replay all moves except the last one\n        for (let i = 0; i < moves.length - 1; i++) {\n            tempChess.move(moves[i]);\n        }\n        const previousPosition = tempChess.fen();\n        \n        const response = await fetch('http://127.0.0.1:5000/pawnder_move', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Origin': 'http://localhost:3000'\n            },\n            mode: 'cors',\n            credentials: 'same-origin',\n            body: JSON.stringify({\n                move: lastMove,\n                position: currentPosition,\n                previous_position: previousPosition\n            })\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setAnalysis(data.analysis); // Store the analysis in state\n        console.log(\"Received from backend:\", data);\n        \n    } catch (error) {\n        console.error(\"Error sending position to backend:\", error);\n        setAnalysis(\"Error getting analysis\");\n    } finally {\n        setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n        <div>\n            <div ref={boardRef} style={{ width: \"400px\", height: \"400px\" }}></div>\n            <button \n                onClick={handlePawnderClick}\n                style={{\n                    marginTop: \"10px\",\n                    padding: \"10px 20px\",\n                    fontSize: \"16px\",\n                    backgroundColor: \"#4CAF50\",\n                    color: \"white\",\n                    border: \"none\",\n                    borderRadius: \"5px\",\n                    cursor: \"pointer\"\n                }}\n            >\n                Pawnder Why!\n            </button>\n            <div\n                style={{\n                    marginTop: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #ccc\",\n                    borderRadius: \"5px\",\n                    backgroundColor: \"#f9f9f9\",\n                    minHeight: \"100px\",\n                    maxWidth: \"400px\",\n                    whiteSpace: \"pre-wrap\"\n                }}\n            >\n                {analysis || \"Click 'Pawnder Why!' to get move analysis\"}\n            </div>\n        </div>\n        <div style={{ width: \"200px\", marginLeft: \"20px\" }}>\n            <h3>Top Moves</h3>\n            {analysisLines.map((line, index) => (\n                <div key={index}>\n                    <div>Line {index + 1}:</div>\n                    {line.score && (\n                        <div>Score: {line.scoreType === 'cp' ? line.score / 100 : `Mate in ${line.score}`}</div>\n                    )}\n                    {line.pv && <div>Moves: {line.pv.join(' ')}</div>}\n                </div>\n            ))}\n        </div>\n    </div>\n);\n};\n\nexport default ChessBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}