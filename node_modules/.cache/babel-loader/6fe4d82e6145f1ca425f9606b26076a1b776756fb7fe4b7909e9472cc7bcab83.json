{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useCallback } from \"react\";\nconst useStockfishEngine = ({\n  onEvaluation\n}) => {\n  _s();\n  const engineRef = useRef(null);\n  const onEvaluationRef = useRef(onEvaluation);\n  const isReadyRef = useRef(false);\n\n  // Keep callback updated\n  useEffect(() => {\n    onEvaluationRef.current = onEvaluation;\n  }, [onEvaluation]);\n  useEffect(() => {\n    console.log(\"Initializing Stockfish engine\");\n    const stockfish = new Worker(\"/workers/stockfish-16.1.js\"); // Updated path\n    engineRef.current = stockfish;\n\n    // Use worker.onmessage to handle Stockfish responses\n    stockfish.onmessage = event => {\n      const data = event.data;\n      console.log(\"[Stockfish] Received:\", data);\n      if (data === \"uciok\") {\n        console.log(\"Stockfish UCI ready\");\n        isReadyRef.current = true;\n        // Configure engine\n        stockfish.postMessage(\"setoption name MultiPV value 5\");\n        stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");\n        stockfish.postMessage(\"isready\");\n      } else if (data === \"readyok\") {\n        console.log(\"Stockfish ready\");\n      } else if (data.startsWith(\"info\")) {\n        console.log(\"Analysis info:\", data);\n        // Parse best moves here\n      } else if (data.startsWith(\"bestmove\")) {\n        console.log(\"Best move received:\", data);\n        const move = data.split(\" \")[1];\n        if (move && move !== \"(none)\") {\n          onEvaluationRef.current([move]);\n        }\n      }\n    };\n\n    // Initialize UCI protocol\n    console.log(\"Starting UCI protocol\");\n    stockfish.postMessage(\"uci\");\n    return () => {\n      console.log(\"Cleaning up Stockfish\");\n      stockfish.terminate();\n    };\n  }, []);\n  const sendCommand = useCallback(cmd => {\n    if (!engineRef.current || !isReadyRef.current) {\n      console.error(\"Engine not ready\");\n      return;\n    }\n    console.log(\"[Stockfish] Sending command:\", cmd);\n    engineRef.current.postMessage(cmd);\n  }, []);\n  return {\n    sendCommand\n  };\n};\n_s(useStockfishEngine, \"kaZn1g3s8VDg9XokAEbr2NqWtr4=\");\nexport default useStockfishEngine;","map":{"version":3,"names":["useEffect","useRef","useCallback","useStockfishEngine","onEvaluation","_s","engineRef","onEvaluationRef","isReadyRef","current","console","log","stockfish","Worker","onmessage","event","data","postMessage","startsWith","move","split","terminate","sendCommand","cmd","error"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/useStockfishEngine.js"],"sourcesContent":["import { useEffect, useRef, useCallback } from \"react\";\n\nconst useStockfishEngine = ({ onEvaluation }) => {\n    const engineRef = useRef(null);\n    const onEvaluationRef = useRef(onEvaluation);\n    const isReadyRef = useRef(false);\n\n    // Keep callback updated\n    useEffect(() => {\n        onEvaluationRef.current = onEvaluation;\n    }, [onEvaluation]);\n\n    useEffect(() => {\n        console.log(\"Initializing Stockfish engine\");\n        const stockfish = new Worker(\"/workers/stockfish-16.1.js\"); // Updated path\n        engineRef.current = stockfish;\n\n        // Use worker.onmessage to handle Stockfish responses\n        stockfish.onmessage = (event) => {\n            const data = event.data;\n            console.log(\"[Stockfish] Received:\", data);\n\n            if (data === \"uciok\") {\n                console.log(\"Stockfish UCI ready\");\n                isReadyRef.current = true;\n                // Configure engine\n                stockfish.postMessage(\"setoption name MultiPV value 5\");\n                stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");\n                stockfish.postMessage(\"isready\");\n            }\n            else if (data === \"readyok\") {\n                console.log(\"Stockfish ready\");\n            }\n            else if (data.startsWith(\"info\")) {\n                console.log(\"Analysis info:\", data);\n                // Parse best moves here\n            }\n            else if (data.startsWith(\"bestmove\")) {\n                console.log(\"Best move received:\", data);\n                const move = data.split(\" \")[1];\n                if (move && move !== \"(none)\") {\n                    onEvaluationRef.current([move]);\n                }\n            }\n        };\n\n        // Initialize UCI protocol\n        console.log(\"Starting UCI protocol\");\n        stockfish.postMessage(\"uci\");\n\n        return () => {\n            console.log(\"Cleaning up Stockfish\");\n            stockfish.terminate();\n        };\n    }, []);\n\n    const sendCommand = useCallback((cmd) => {\n        if (!engineRef.current || !isReadyRef.current) {\n            console.error(\"Engine not ready\");\n            return;\n        }\n        console.log(\"[Stockfish] Sending command:\", cmd);\n        engineRef.current.postMessage(cmd);\n    }, []);\n\n    return { sendCommand };\n};\n\nexport default useStockfishEngine;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAEtD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMM,eAAe,GAAGN,MAAM,CAACG,YAAY,CAAC;EAC5C,MAAMI,UAAU,GAAGP,MAAM,CAAC,KAAK,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACZO,eAAe,CAACE,OAAO,GAAGL,YAAY;EAC1C,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBJ,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,MAAMC,SAAS,GAAG,IAAIC,MAAM,CAAC,4BAA4B,CAAC,CAAC,CAAC;IAC5DP,SAAS,CAACG,OAAO,GAAGG,SAAS;;IAE7B;IACAA,SAAS,CAACE,SAAS,GAAIC,KAAK,IAAK;MAC7B,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;MACvBN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEK,IAAI,CAAC;MAE1C,IAAIA,IAAI,KAAK,OAAO,EAAE;QAClBN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCH,UAAU,CAACC,OAAO,GAAG,IAAI;QACzB;QACAG,SAAS,CAACK,WAAW,CAAC,gCAAgC,CAAC;QACvDL,SAAS,CAACK,WAAW,CAAC,wCAAwC,CAAC;QAC/DL,SAAS,CAACK,WAAW,CAAC,SAAS,CAAC;MACpC,CAAC,MACI,IAAID,IAAI,KAAK,SAAS,EAAE;QACzBN,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAClC,CAAC,MACI,IAAIK,IAAI,CAACE,UAAU,CAAC,MAAM,CAAC,EAAE;QAC9BR,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,IAAI,CAAC;QACnC;MACJ,CAAC,MACI,IAAIA,IAAI,CAACE,UAAU,CAAC,UAAU,CAAC,EAAE;QAClCR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEK,IAAI,CAAC;QACxC,MAAMG,IAAI,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAID,IAAI,IAAIA,IAAI,KAAK,QAAQ,EAAE;UAC3BZ,eAAe,CAACE,OAAO,CAAC,CAACU,IAAI,CAAC,CAAC;QACnC;MACJ;IACJ,CAAC;;IAED;IACAT,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCC,SAAS,CAACK,WAAW,CAAC,KAAK,CAAC;IAE5B,OAAO,MAAM;MACTP,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCC,SAAS,CAACS,SAAS,CAAC,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGpB,WAAW,CAAEqB,GAAG,IAAK;IACrC,IAAI,CAACjB,SAAS,CAACG,OAAO,IAAI,CAACD,UAAU,CAACC,OAAO,EAAE;MAC3CC,OAAO,CAACc,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACJ;IACAd,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEY,GAAG,CAAC;IAChDjB,SAAS,CAACG,OAAO,CAACQ,WAAW,CAACM,GAAG,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAED;EAAY,CAAC;AAC1B,CAAC;AAACjB,EAAA,CAhEIF,kBAAkB;AAkExB,eAAeA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}