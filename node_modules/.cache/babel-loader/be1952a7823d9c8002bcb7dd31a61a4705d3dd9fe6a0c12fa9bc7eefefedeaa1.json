{"ast":null,"code":"import{useEffect,useRef,useCallback,useState}from\"react\";const useStockfishEngine=_ref=>{let{onEvaluation}=_ref;const engineRef=useRef(null);const onEvaluationRef=useRef(onEvaluation);const isReadyRef=useRef(false);const[analysisLines,setAnalysisLines]=useState([]);// Keep callback updated\nuseEffect(()=>{onEvaluationRef.current=onEvaluation;},[onEvaluation]);useEffect(()=>{console.log(\"Initializing Stockfish engine\");const stockfish=new Worker(\"/workers/stockfish-16.1.js\");// Updated path\nengineRef.current=stockfish;// Use worker.onmessage to handle Stockfish responses\nstockfish.onmessage=event=>{const data=event.data;console.log(\"[Stockfish] Received:\",data);if(data===\"uciok\"){console.log(\"Stockfish UCI ready\");isReadyRef.current=true;// Configure engine\nstockfish.postMessage(\"setoption name MultiPV value 5\");stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");stockfish.postMessage(\"isready\");}else if(data===\"readyok\"){console.log(\"Stockfish ready\");}else if(data.startsWith(\"info\")){// Parse best moves here\nconst analysis_line=parseInfoLine(data);console.log(\"Analysis line:\",analysis_line);setAnalysisLines(analysis_line);}else if(data.startsWith(\"bestmove\")){console.log(\"Best move received:\",data);const move=data.split(\" \")[1];if(move&&move!==\"(none)\"){onEvaluationRef.current([move]);}}};// Initialize UCI protocol\nconsole.log(\"Starting UCI protocol\");stockfish.postMessage(\"uci\");return()=>{console.log(\"Cleaning up Stockfish\");stockfish.terminate();};},[]);const sendCommand=useCallback(cmd=>{if(!engineRef.current||!isReadyRef.current){console.error(\"Engine not ready\");return;}console.log(\"[Stockfish] Sending command:\",cmd);engineRef.current.postMessage(cmd);},[]);return{sendCommand,analysisLines};};//Parsing function to analyze stockfish engine results. \nconst parseInfoLine=line=>{const tokens=line.split(\" \");const info={};// First check for depth\nconst depthIndex=tokens.indexOf(\"depth\");if(depthIndex===-1||Number(tokens[depthIndex+1])!==15){return{};}for(let i=0;i<tokens.length;i++){switch(tokens[i]){case\"depth\":info.depth=Number(tokens[++i]);break;case\"seldepth\":info.seldepth=Number(tokens[++i]);break;case\"multipv\":info.multipv=Number(tokens[++i]);break;case\"score\":info.scoreType=tokens[++i];// \"cp\" or \"mate\"\ninfo.score=Number(tokens[++i]);break;case\"nodes\":info.nodes=Number(tokens[++i]);break;case\"nps\":info.nps=Number(tokens[++i]);break;case\"hashfull\":info.hashfull=Number(tokens[++i]);break;case\"time\":info.time=Number(tokens[++i]);break;case\"pv\":// Capture the entire principal variation (all subsequent tokens)\ninfo.pv=tokens.slice(i+1);i=tokens.length;// Exit loop after collecting the PV\nbreak;default:// Skip any unhandled tokens\nbreak;}}return info;};export default useStockfishEngine;","map":{"version":3,"names":["useEffect","useRef","useCallback","useState","useStockfishEngine","_ref","onEvaluation","engineRef","onEvaluationRef","isReadyRef","analysisLines","setAnalysisLines","current","console","log","stockfish","Worker","onmessage","event","data","postMessage","startsWith","analysis_line","parseInfoLine","move","split","terminate","sendCommand","cmd","error","line","tokens","info","depthIndex","indexOf","Number","i","length","depth","seldepth","multipv","scoreType","score","nodes","nps","hashfull","time","pv","slice"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/useStockfishEngine.js"],"sourcesContent":["import { useEffect, useRef, useCallback, useState } from \"react\";\n\nconst useStockfishEngine = ({ onEvaluation }) => {\n    const engineRef = useRef(null);\n    const onEvaluationRef = useRef(onEvaluation);\n    const isReadyRef = useRef(false);\n    const [analysisLines, setAnalysisLines] = useState([]);\n\n    // Keep callback updated\n    useEffect(() => {\n        onEvaluationRef.current = onEvaluation;\n    }, [onEvaluation]);\n\n    useEffect(() => {\n        console.log(\"Initializing Stockfish engine\");\n        const stockfish = new Worker(\"/workers/stockfish-16.1.js\"); // Updated path\n        engineRef.current = stockfish;\n\n        // Use worker.onmessage to handle Stockfish responses\n        stockfish.onmessage = (event) => {\n            const data = event.data;\n            console.log(\"[Stockfish] Received:\", data);\n\n            if (data === \"uciok\") {\n                console.log(\"Stockfish UCI ready\");\n                isReadyRef.current = true;\n                // Configure engine\n                stockfish.postMessage(\"setoption name MultiPV value 5\");\n                stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");\n                stockfish.postMessage(\"isready\");\n            }\n            else if (data === \"readyok\") {\n                console.log(\"Stockfish ready\");\n            }\n            else if (data.startsWith(\"info\")) {\n                // Parse best moves here\n                const analysis_line = parseInfoLine(data);\n                console.log(\"Analysis line:\", analysis_line);\n                setAnalysisLines(analysis_line);\n            }\n            else if (data.startsWith(\"bestmove\")) {\n                console.log(\"Best move received:\", data);\n                const move = data.split(\" \")[1];\n                if (move && move !== \"(none)\") {\n                    onEvaluationRef.current([move]);\n                }\n            }\n        };\n\n        // Initialize UCI protocol\n        console.log(\"Starting UCI protocol\");\n        stockfish.postMessage(\"uci\");\n\n        return () => {\n            console.log(\"Cleaning up Stockfish\");\n            stockfish.terminate();\n        };\n    }, []);\n\n    const sendCommand = useCallback((cmd) => {\n        if (!engineRef.current || !isReadyRef.current) {\n            console.error(\"Engine not ready\");\n            return;\n        }\n        console.log(\"[Stockfish] Sending command:\", cmd);\n        engineRef.current.postMessage(cmd);\n    }, []);\n\n    return { sendCommand, analysisLines };\n};\n\n//Parsing function to analyze stockfish engine results. \nconst parseInfoLine = (line) => {\n    const tokens = line.split(\" \");\n    const info = {};\n    \n    // First check for depth\n    const depthIndex = tokens.indexOf(\"depth\");\n    if (depthIndex === -1 || Number(tokens[depthIndex + 1]) !== 15) {\n        return {};\n    }\n    \n    for (let i = 0; i < tokens.length; i++) {\n      switch (tokens[i]) {\n        case \"depth\":\n          info.depth = Number(tokens[++i]);\n          break;\n        case \"seldepth\":\n          info.seldepth = Number(tokens[++i]);\n          break;\n        case \"multipv\":\n          info.multipv = Number(tokens[++i]);\n          break;\n        case \"score\":\n          info.scoreType = tokens[++i]; // \"cp\" or \"mate\"\n          info.score = Number(tokens[++i]);\n          break;\n        case \"nodes\":\n          info.nodes = Number(tokens[++i]);\n          break;\n        case \"nps\":\n          info.nps = Number(tokens[++i]);\n          break;\n        case \"hashfull\":\n          info.hashfull = Number(tokens[++i]);\n          break;\n        case \"time\":\n          info.time = Number(tokens[++i]);\n          break;\n        case \"pv\":\n          // Capture the entire principal variation (all subsequent tokens)\n          info.pv = tokens.slice(i + 1);\n          i = tokens.length; // Exit loop after collecting the PV\n          break;\n        default:\n          // Skip any unhandled tokens\n          break;\n      }\n    }\n    return info;\n  };\n  \n\nexport default useStockfishEngine;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}