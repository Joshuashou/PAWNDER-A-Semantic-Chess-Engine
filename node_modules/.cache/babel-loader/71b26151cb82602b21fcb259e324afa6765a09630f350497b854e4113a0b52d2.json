{"ast":null,"code":"import{useEffect,useRef,useCallback}from\"react\";const useStockfishEngine=_ref=>{let{onEvaluation}=_ref;const engineRef=useRef(null);const analysisRef=useRef({});const onEvaluationRef=useRef(onEvaluation);// Keep evaluation callback updated\nuseEffect(()=>{onEvaluationRef.current=onEvaluation;},[onEvaluation]);useEffect(()=>{console.log(\"Initializing Stockfish engine\");const stockfish=new Worker(\"/stockfish/stockfish-16.1.js\");engineRef.current=stockfish;let isReady=false;const handleMessage=event=>{const data=event.data;console.log(\"[Stockfish] Received:\",data);if(data===\"uciok\"){console.log(\"Stockfish UCI ready\");isReady=true;stockfish.postMessage(\"setoption name MultiPV value 5\");stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");}else if(data.startsWith(\"info\")){const match=data.match(/multipv (\\d+).*score (cp|mate) ([-\\d]+).*pv (\\S+)/);if(match){const[,multipv,type,score,move]=match;analysisRef.current[multipv]={score:type==='cp'?parseInt(score):parseInt(score)>0?100000-parseInt(score):-100000-parseInt(score),move:move.split(\" \")[0]// Take only first move from PV\n};}}else if(data.startsWith(\"bestmove\")){console.log(\"Stockfish analysis complete\");const moves=Object.values(analysisRef.current).sort((a,b)=>b.score-a.score).map(m=>m.move);onEvaluationRef.current(moves.slice(0,5));analysisRef.current={};}};stockfish.addEventListener(\"message\",handleMessage);console.log(\"Initializing UCI\");stockfish.postMessage(\"uci\");return()=>{console.log(\"Cleaning up Stockfish\");stockfish.removeEventListener(\"message\",handleMessage);stockfish.terminate();};},[]);// Empty dependency array = run once\nconst sendCommand=useCallback(cmd=>{if(!engineRef.current){console.error(\"Engine not initialized\");return;}console.log(\"[Stockfish] Sending command:\",cmd);engineRef.current.postMessage(cmd);},[]);return{sendCommand};};export default useStockfishEngine;","map":{"version":3,"names":["useEffect","useRef","useCallback","useStockfishEngine","_ref","onEvaluation","engineRef","analysisRef","onEvaluationRef","current","console","log","stockfish","Worker","isReady","handleMessage","event","data","postMessage","startsWith","match","multipv","type","score","move","parseInt","split","moves","Object","values","sort","a","b","map","m","slice","addEventListener","removeEventListener","terminate","sendCommand","cmd","error"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/useStockfishEngine.js"],"sourcesContent":["import { useEffect, useRef, useCallback } from \"react\";\n\nconst useStockfishEngine = ({ onEvaluation }) => {\n    const engineRef = useRef(null);\n    const analysisRef = useRef({});\n    const onEvaluationRef = useRef(onEvaluation);\n\n    // Keep evaluation callback updated\n    useEffect(() => {\n        onEvaluationRef.current = onEvaluation;\n    }, [onEvaluation]);\n\n    useEffect(() => {\n        console.log(\"Initializing Stockfish engine\");\n        const stockfish = new Worker(\"/stockfish/stockfish-16.1.js\");\n        engineRef.current = stockfish;\n        let isReady = false;\n\n        const handleMessage = (event) => {\n            const data = event.data;\n            console.log(\"[Stockfish] Received:\", data);\n\n            if (data === \"uciok\") {\n                console.log(\"Stockfish UCI ready\");\n                isReady = true;\n                stockfish.postMessage(\"setoption name MultiPV value 5\");\n                stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");\n            }\n            else if (data.startsWith(\"info\")) {\n                const match = data.match(/multipv (\\d+).*score (cp|mate) ([-\\d]+).*pv (\\S+)/);\n                if (match) {\n                    const [, multipv, type, score, move] = match;\n                    analysisRef.current[multipv] = {\n                        score: type === 'cp' ? parseInt(score) : \n                               parseInt(score) > 0 ? 100000 - parseInt(score) : -100000 - parseInt(score),\n                        move: move.split(\" \")[0] // Take only first move from PV\n                    };\n                }\n            }\n            else if (data.startsWith(\"bestmove\")) {\n                console.log(\"Stockfish analysis complete\");\n                const moves = Object.values(analysisRef.current)\n                    .sort((a, b) => b.score - a.score)\n                    .map(m => m.move);\n                onEvaluationRef.current(moves.slice(0, 5));\n                analysisRef.current = {};\n            }\n        };\n\n        stockfish.addEventListener(\"message\", handleMessage);\n        console.log(\"Initializing UCI\");\n        stockfish.postMessage(\"uci\");\n\n        return () => {\n            console.log(\"Cleaning up Stockfish\");\n            stockfish.removeEventListener(\"message\", handleMessage);\n            stockfish.terminate();\n        };\n    }, []); // Empty dependency array = run once\n\n    const sendCommand = useCallback((cmd) => {\n        if (!engineRef.current) {\n            console.error(\"Engine not initialized\");\n            return;\n        }\n        console.log(\"[Stockfish] Sending command:\", cmd);\n        engineRef.current.postMessage(cmd);\n    }, []);\n\n    return { sendCommand };\n};\n\nexport default useStockfishEngine;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}