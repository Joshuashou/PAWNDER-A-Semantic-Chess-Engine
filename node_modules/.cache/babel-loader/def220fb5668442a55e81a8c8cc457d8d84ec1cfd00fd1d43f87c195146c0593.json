{"ast":null,"code":"import{useEffect,useState,useRef}from\"react\";const StockfishEngine=_ref=>{let{onEvaluation}=_ref;const engineRef=useRef(null);useEffect(()=>{const stockfish=new Worker(\"/stockfish/stockfish-16.1.js\");engineRef.current=stockfish;const handleMessage=event=>{if(event.data.includes(\"bestmove\")||event.data.includes(\"score\")){console.log(\"Stockfish output:\",event.data);onEvaluation(event.data);// Send analysis results to the parent component\n}};stockfish.addEventListener(\"message\",handleMessage);stockfish.postMessage(\"uci\");return()=>{stockfish.removeEventListener(\"message\",handleMessage);stockfish.terminate();};},[onEvaluation]);const sendCommand=cmd=>{if(engineRef.current){console.log(\"Sending command to Stockfish:\",cmd);console.log(\"yo is something happening here\");engineRef.current.postMessage(cmd);}};return{sendCommand};};export default StockfishEngine;","map":{"version":3,"names":["useEffect","useState","useRef","StockfishEngine","_ref","onEvaluation","engineRef","stockfish","Worker","current","handleMessage","event","data","includes","console","log","addEventListener","postMessage","removeEventListener","terminate","sendCommand","cmd"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/StockfishEngine.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\n\nconst StockfishEngine = ({ onEvaluation }) => {\n    const engineRef = useRef(null);\n\n    useEffect(() => {\n        const stockfish = new Worker(\"/stockfish/stockfish-16.1.js\");\n        engineRef.current = stockfish;\n\n        const handleMessage = (event) => {\n            if (event.data.includes(\"bestmove\") || event.data.includes(\"score\")) {\n              console.log(\"Stockfish output:\", event.data);\n              onEvaluation(event.data); // Send analysis results to the parent component\n            }\n          };\n\n        stockfish.addEventListener(\"message\", handleMessage);\n        stockfish.postMessage(\"uci\");\n\n        return () => {\n            stockfish.removeEventListener(\"message\", handleMessage);\n            stockfish.terminate();\n        };\n    }, [onEvaluation]);\n\n    const sendCommand = (cmd) => {\n        if (engineRef.current) {\n            console.log(\"Sending command to Stockfish:\", cmd);\n            console.log(\"yo is something happening here\");\n            engineRef.current.postMessage(cmd);\n        }\n    };\n\n    return { sendCommand };\n};\n\nexport default StockfishEngine;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAEnD,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CACrC,KAAM,CAAAE,SAAS,CAAGJ,MAAM,CAAC,IAAI,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAO,SAAS,CAAG,GAAI,CAAAC,MAAM,CAAC,8BAA8B,CAAC,CAC5DF,SAAS,CAACG,OAAO,CAAGF,SAAS,CAE7B,KAAM,CAAAG,aAAa,CAAIC,KAAK,EAAK,CAC7B,GAAIA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAIF,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,CAAE,CACnEC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEJ,KAAK,CAACC,IAAI,CAAC,CAC5CP,YAAY,CAACM,KAAK,CAACC,IAAI,CAAC,CAAE;AAC5B,CACF,CAAC,CAEHL,SAAS,CAACS,gBAAgB,CAAC,SAAS,CAAEN,aAAa,CAAC,CACpDH,SAAS,CAACU,WAAW,CAAC,KAAK,CAAC,CAE5B,MAAO,IAAM,CACTV,SAAS,CAACW,mBAAmB,CAAC,SAAS,CAAER,aAAa,CAAC,CACvDH,SAAS,CAACY,SAAS,CAAC,CAAC,CACzB,CAAC,CACL,CAAC,CAAE,CAACd,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAe,WAAW,CAAIC,GAAG,EAAK,CACzB,GAAIf,SAAS,CAACG,OAAO,CAAE,CACnBK,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEM,GAAG,CAAC,CACjDP,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7CT,SAAS,CAACG,OAAO,CAACQ,WAAW,CAACI,GAAG,CAAC,CACtC,CACJ,CAAC,CAED,MAAO,CAAED,WAAY,CAAC,CAC1B,CAAC,CAED,cAAe,CAAAjB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}