{"ast":null,"code":"var _jsxFileName = \"/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Chessground } from \"chessground\";\nimport { Chess } from \"chess.js\";\nimport useStockfishEngine from \"./useStockfishEngine\";\nimport \"../../node_modules/chessground/assets/chessground.base.css\";\nimport \"../../node_modules/chessground/assets/chessground.brown.css\";\nimport \"../../node_modules/chessground/assets/chessground.cburnett.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  _s();\n  const boardRef = useRef(null);\n  const chess = useRef(new Chess());\n  const groundRef = useRef(null);\n  const [topMoves, setTopMoves] = useState([]);\n  const [fen, setFen] = useState(chess.current.fen());\n  const turn = chess.current.turn() === 'w' ? 'white' : 'black';\n  console.log(\"Hi\");\n  const handleEvaluation = useCallback(data => {\n    console.log(\"handleEvaluation called\");\n    setTopMoves(parseStockfishOutput(data));\n  }, []);\n  const {\n    sendCommand\n  } = useStockfishEngine({\n    onEvaluation: handleEvaluation\n  });\n  const getDests = useCallback(() => {\n    const dests = new Map();\n    chess.current.moves({\n      verbose: true\n    }).forEach(move => {\n      dests.set(move.from, (dests.get(move.from) || []).concat(move.to));\n    });\n    return dests;\n  }, [fen]);\n  const handleMove = useCallback((orig, dest) => {\n    try {\n      const move = chess.current.move({\n        from: orig,\n        to: dest,\n        promotion: \"q\"\n      });\n      if (!move) return \"snapback\";\n      const newFen = chess.current.fen();\n      setFen(newFen);\n      if (sendCommand) {\n        console.log(\"stockfish sending move command\");\n        sendCommand(`position fen ${newFen}`);\n        sendCommand(\"go depth 15\");\n      }\n    } catch (error) {\n      console.error(\"Move error:\", error);\n    }\n  }, [sendCommand]);\n  useEffect(() => {\n    groundRef.current = Chessground(boardRef.current, {\n      fen,\n      turnColor: turn,\n      movable: {\n        color: turn,\n        free: false,\n        dests: getDests(),\n        events: {\n          after: handleMove\n        }\n      },\n      highlight: {\n        lastMove: true,\n        check: true\n      }\n    });\n    return () => {\n      var _groundRef$current;\n      return (_groundRef$current = groundRef.current) === null || _groundRef$current === void 0 ? void 0 : _groundRef$current.destroy();\n    };\n  }, []);\n  useEffect(() => {\n    var _groundRef$current2;\n    (_groundRef$current2 = groundRef.current) === null || _groundRef$current2 === void 0 ? void 0 : _groundRef$current2.set({\n      fen,\n      turnColor: turn,\n      movable: {\n        color: turn,\n        dests: getDests()\n      }\n    });\n  }, [fen, turn, getDests]);\n  const parseStockfishOutput = output => {\n    if (Array.isArray(output)) {\n      // If the output is already an array, return it directly\n      return output.slice(0, 5);\n    }\n    if (typeof output !== \"string\") {\n      console.error(\"Invalid output:\", output);\n      return [];\n    }\n\n    // Parse the string output\n    const matches = [];\n    const regex = /pv\\s+(\\w+)/g;\n    let match;\n    while ((match = regex.exec(output)) !== null) {\n      matches.push(match[1]);\n    }\n    return matches.slice(0, 5);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: boardRef,\n      style: {\n        width: \"400px\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"200px\",\n        marginLeft: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topMoves.map((move, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: move\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"KbMivH7zcHsaG/OhLE5CDoBrJuk=\", false, function () {\n  return [useStockfishEngine];\n});\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Chessground","Chess","useStockfishEngine","jsxDEV","_jsxDEV","ChessBoard","_s","boardRef","chess","groundRef","topMoves","setTopMoves","fen","setFen","current","turn","console","log","handleEvaluation","data","parseStockfishOutput","sendCommand","onEvaluation","getDests","dests","Map","moves","verbose","forEach","move","set","from","get","concat","to","handleMove","orig","dest","promotion","newFen","error","turnColor","movable","color","free","events","after","highlight","lastMove","check","_groundRef$current","destroy","_groundRef$current2","output","Array","isArray","slice","matches","regex","match","exec","push","style","display","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","map","i","_c","$RefreshReg$"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/ChessBoard.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Chessground } from \"chessground\";\nimport { Chess } from \"chess.js\";\nimport useStockfishEngine from \"./useStockfishEngine\";\nimport \"../../node_modules/chessground/assets/chessground.base.css\";\nimport \"../../node_modules/chessground/assets/chessground.brown.css\";\nimport \"../../node_modules/chessground/assets/chessground.cburnett.css\";\n\nconst ChessBoard = () => {\n  const boardRef = useRef(null);\n  const chess = useRef(new Chess());\n  const groundRef = useRef(null);\n  const [topMoves, setTopMoves] = useState([]);\n  const [fen, setFen] = useState(chess.current.fen());\n  const turn = chess.current.turn() === 'w' ? 'white' : 'black';\n  console.log(\"Hi\")\n\n  const handleEvaluation = useCallback((data) => {\n    console.log(\"handleEvaluation called\");\n    setTopMoves(parseStockfishOutput(data));\n  }, []);\n\n  const { sendCommand } = useStockfishEngine({ onEvaluation: handleEvaluation });\n\n  const getDests = useCallback(() => {\n    const dests = new Map();\n    chess.current.moves({ verbose: true }).forEach(move => {\n      dests.set(move.from, (dests.get(move.from) || []).concat(move.to));\n    });\n    return dests;\n  }, [fen]);\n\n  const handleMove = useCallback((orig, dest) => {\n    try {\n      const move = chess.current.move({ from: orig, to: dest, promotion: \"q\" });\n      if (!move) return \"snapback\";\n      \n      const newFen = chess.current.fen();\n      setFen(newFen);\n      \n      if (sendCommand) {\n        console.log(\"stockfish sending move command\");\n        sendCommand(`position fen ${newFen}`);\n        sendCommand(\"go depth 15\");\n      }\n    } catch (error) {\n      console.error(\"Move error:\", error);\n    }\n  }, [sendCommand]);\n\n  useEffect(() => {\n    groundRef.current = Chessground(boardRef.current, {\n      fen,\n      turnColor: turn,\n      movable: {\n        color: turn,\n        free: false,\n        dests: getDests(),\n        events: { after: handleMove }\n      },\n      highlight: { lastMove: true, check: true }\n    });\n\n    return () => groundRef.current?.destroy();\n  }, []);\n\n  useEffect(() => {\n    groundRef.current?.set({\n      fen,\n      turnColor: turn,\n      movable: { color: turn, dests: getDests() }\n    });\n  }, [fen, turn, getDests]);\n\n  const parseStockfishOutput = (output) => {\n    if (Array.isArray(output)) {\n      // If the output is already an array, return it directly\n      return output.slice(0, 5);\n    }\n  \n    if (typeof output !== \"string\") {\n      console.error(\"Invalid output:\", output);\n      return [];\n    }\n  \n    // Parse the string output\n    const matches = [];\n    const regex = /pv\\s+(\\w+)/g;\n    let match;\n    while ((match = regex.exec(output)) !== null) {\n      matches.push(match[1]);\n    }\n    return matches.slice(0, 5);\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div ref={boardRef} style={{ width: \"400px\", height: \"400px\" }}></div>\n      <div style={{ width: \"200px\", marginLeft: \"20px\" }}>\n        <h3>Top Moves</h3>\n        <ul>{topMoves.map((move, i) => <li key={i}>{move}</li>)}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ChessBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}