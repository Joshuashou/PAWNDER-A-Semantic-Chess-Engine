{"ast":null,"code":"import{useEffect,useRef}from\"react\";const useStockfishEngine=_ref=>{let{onEvaluation}=_ref;const engineRef=useRef(null);const analysisRef=useRef({});console.log(\"Initializing engine\");useEffect(()=>{const stockfish=new Worker(\"/stockfish/stockfish-16.1.js\");engineRef.current=stockfish;const handleMessage=event=>{const data=event.data;console.log(\"[Stockfish] Received:\",event.data);if(data.startsWith(\"info\")){const match=data.match(/multipv (\\d+).*score (cp|mate) ([-+]?\\d+).*pv (\\w+)/);if(match){const[,multipv,type,score,move]=match;analysisRef.current[multipv]={score:type==='cp'?parseInt(score):100000-Math.abs(score),move};}}else if(data.startsWith(\"bestmove\")){console.log(\"Stockfish best move received\");const topMoves=Object.values(analysisRef.current).sort((a,b)=>b.score-a.score).map(m=>m.move);onEvaluation(topMoves.slice(0,5));analysisRef.current={};}};stockfish.addEventListener(\"message\",handleMessage);console.log(\"stockfish sending init commands\");stockfish.postMessage(\"uci\");stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");stockfish.postMessage(\"setoption name MultiPV value 5\");return()=>{stockfish.removeEventListener(\"message\",handleMessage);stockfish.terminate();};},[onEvaluation]);const sendCommand=cmd=>{var _engineRef$current;(_engineRef$current=engineRef.current)===null||_engineRef$current===void 0?void 0:_engineRef$current.postMessage(cmd);};return{sendCommand};};export default useStockfishEngine;","map":{"version":3,"names":["useEffect","useRef","useStockfishEngine","_ref","onEvaluation","engineRef","analysisRef","console","log","stockfish","Worker","current","handleMessage","event","data","startsWith","match","multipv","type","score","move","parseInt","Math","abs","topMoves","Object","values","sort","a","b","map","m","slice","addEventListener","postMessage","removeEventListener","terminate","sendCommand","cmd","_engineRef$current"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/useStockfishEngine.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst useStockfishEngine = ({ onEvaluation }) => {\n    const engineRef = useRef(null);\n    const analysisRef = useRef({});\n    console.log(\"Initializing engine\")\n\n    useEffect(() => {\n        const stockfish = new Worker(\"/stockfish/stockfish-16.1.js\");\n        engineRef.current = stockfish;\n\n        const handleMessage = (event) => {\n            const data = event.data;\n            console.log(\"[Stockfish] Received:\", event.data);\n            \n            if (data.startsWith(\"info\")) {\n                const match = data.match(/multipv (\\d+).*score (cp|mate) ([-+]?\\d+).*pv (\\w+)/);\n                if (match) {\n                    const [, multipv, type, score, move] = match;\n                    analysisRef.current[multipv] = {\n                        score: type === 'cp' ? parseInt(score) : 100000 - Math.abs(score),\n                        move\n                    };\n                }\n            }\n            else if (data.startsWith(\"bestmove\")) {\n                console.log(\"Stockfish best move received\");\n                const topMoves = Object.values(analysisRef.current)\n                    .sort((a, b) => b.score - a.score)\n                    .map(m => m.move);\n                \n                onEvaluation(topMoves.slice(0, 5));\n                analysisRef.current = {};\n            }\n        };\n\n        stockfish.addEventListener(\"message\", handleMessage);\n        console.log(\"stockfish sending init commands\");\n        stockfish.postMessage(\"uci\");\n        stockfish.postMessage(\"setoption name UCI_ShowWDL value false\");\n        stockfish.postMessage(\"setoption name MultiPV value 5\");\n\n        return () => {\n            stockfish.removeEventListener(\"message\", handleMessage);\n            stockfish.terminate();\n        };\n    }, [onEvaluation]);\n\n    const sendCommand = (cmd) => {\n        engineRef.current?.postMessage(cmd);\n    };\n\n    return { sendCommand };\n};\n\nexport default useStockfishEngine;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CACxC,KAAM,CAAAE,SAAS,CAAGJ,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAK,WAAW,CAAGL,MAAM,CAAC,CAAC,CAAC,CAAC,CAC9BM,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAElCR,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAS,SAAS,CAAG,GAAI,CAAAC,MAAM,CAAC,8BAA8B,CAAC,CAC5DL,SAAS,CAACM,OAAO,CAAGF,SAAS,CAE7B,KAAM,CAAAG,aAAa,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAAC,IAAI,CAAGD,KAAK,CAACC,IAAI,CACvBP,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEK,KAAK,CAACC,IAAI,CAAC,CAEhD,GAAIA,IAAI,CAACC,UAAU,CAAC,MAAM,CAAC,CAAE,CACzB,KAAM,CAAAC,KAAK,CAAGF,IAAI,CAACE,KAAK,CAAC,qDAAqD,CAAC,CAC/E,GAAIA,KAAK,CAAE,CACP,KAAM,EAAGC,OAAO,CAAEC,IAAI,CAAEC,KAAK,CAAEC,IAAI,CAAC,CAAGJ,KAAK,CAC5CV,WAAW,CAACK,OAAO,CAACM,OAAO,CAAC,CAAG,CAC3BE,KAAK,CAAED,IAAI,GAAK,IAAI,CAAGG,QAAQ,CAACF,KAAK,CAAC,CAAG,MAAM,CAAGG,IAAI,CAACC,GAAG,CAACJ,KAAK,CAAC,CACjEC,IACJ,CAAC,CACL,CACJ,CAAC,IACI,IAAIN,IAAI,CAACC,UAAU,CAAC,UAAU,CAAC,CAAE,CAClCR,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3C,KAAM,CAAAgB,QAAQ,CAAGC,MAAM,CAACC,MAAM,CAACpB,WAAW,CAACK,OAAO,CAAC,CAC9CgB,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAACV,KAAK,CAAGS,CAAC,CAACT,KAAK,CAAC,CACjCW,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACX,IAAI,CAAC,CAErBhB,YAAY,CAACoB,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAClC1B,WAAW,CAACK,OAAO,CAAG,CAAC,CAAC,CAC5B,CACJ,CAAC,CAEDF,SAAS,CAACwB,gBAAgB,CAAC,SAAS,CAAErB,aAAa,CAAC,CACpDL,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9CC,SAAS,CAACyB,WAAW,CAAC,KAAK,CAAC,CAC5BzB,SAAS,CAACyB,WAAW,CAAC,wCAAwC,CAAC,CAC/DzB,SAAS,CAACyB,WAAW,CAAC,gCAAgC,CAAC,CAEvD,MAAO,IAAM,CACTzB,SAAS,CAAC0B,mBAAmB,CAAC,SAAS,CAAEvB,aAAa,CAAC,CACvDH,SAAS,CAAC2B,SAAS,CAAC,CAAC,CACzB,CAAC,CACL,CAAC,CAAE,CAAChC,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAiC,WAAW,CAAIC,GAAG,EAAK,KAAAC,kBAAA,CACzB,CAAAA,kBAAA,CAAAlC,SAAS,CAACM,OAAO,UAAA4B,kBAAA,iBAAjBA,kBAAA,CAAmBL,WAAW,CAACI,GAAG,CAAC,CACvC,CAAC,CAED,MAAO,CAAED,WAAY,CAAC,CAC1B,CAAC,CAED,cAAe,CAAAnC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}