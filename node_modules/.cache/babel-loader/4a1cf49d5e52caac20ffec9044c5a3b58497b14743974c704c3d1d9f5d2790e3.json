{"ast":null,"code":"var _jsxFileName = \"/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Chessground } from \"chessground\";\nimport { Chess } from \"chess.js\";\nimport useStockfishEngine from \"./useStockfishEngine\";\nimport \"../../node_modules/chessground/assets/chessground.base.css\";\nimport \"../../node_modules/chessground/assets/chessground.brown.css\";\nimport \"../../node_modules/chessground/assets/chessground.cburnett.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  _s();\n  const boardRef = useRef(null);\n  const chess = useRef(new Chess());\n  const groundRef = useRef(null);\n  const [topMoves, setTopMoves] = useState([]);\n  const [fen, setFen] = useState(chess.current.fen());\n  const turn = chess.current.turn() === 'w' ? 'white' : 'black';\n  const [analysis, setAnalysis] = useState(\"\");\n  console.log(\"Hi\");\n  const handleEvaluation = useCallback(data => {\n    console.log(\"handleEvaluation called\");\n    setTopMoves(parseStockfishOutput(data));\n  }, []);\n  const {\n    sendCommand,\n    analysisLines\n  } = useStockfishEngine({\n    onEvaluation: handleEvaluation\n  });\n  const getDests = useCallback(() => {\n    const dests = new Map();\n    chess.current.moves({\n      verbose: true\n    }).forEach(move => {\n      dests.set(move.from, (dests.get(move.from) || []).concat(move.to));\n    });\n    return dests;\n  }, [fen]);\n  const handleMove = useCallback((orig, dest) => {\n    try {\n      const move = chess.current.move({\n        from: orig,\n        to: dest,\n        promotion: \"q\"\n      });\n      if (!move) return \"snapback\";\n      const newFen = chess.current.fen();\n      setFen(newFen);\n      if (sendCommand) {\n        console.log(\"stockfish sending move command\");\n        sendCommand(`position fen ${newFen}`);\n        sendCommand(\"go depth 15\");\n      }\n    } catch (error) {\n      console.error(\"Move error:\", error);\n    }\n  }, [sendCommand]);\n  useEffect(() => {\n    groundRef.current = Chessground(boardRef.current, {\n      fen,\n      turnColor: turn,\n      movable: {\n        color: turn,\n        free: false,\n        dests: getDests(),\n        events: {\n          after: handleMove\n        }\n      },\n      highlight: {\n        lastMove: true,\n        check: true\n      }\n    });\n    return () => {\n      var _groundRef$current;\n      return (_groundRef$current = groundRef.current) === null || _groundRef$current === void 0 ? void 0 : _groundRef$current.destroy();\n    };\n  }, []);\n  useEffect(() => {\n    var _groundRef$current2;\n    (_groundRef$current2 = groundRef.current) === null || _groundRef$current2 === void 0 ? void 0 : _groundRef$current2.set({\n      fen,\n      turnColor: turn,\n      movable: {\n        color: turn,\n        dests: getDests()\n      }\n    });\n  }, [fen, turn, getDests]);\n  const parseStockfishOutput = output => {\n    if (Array.isArray(output)) {\n      // If the output is already an array, return it directly\n      return output.slice(0, 5);\n    }\n    if (typeof output !== \"string\") {\n      console.error(\"Invalid output:\", output);\n      return [];\n    }\n\n    // Parse the string output\n    const matches = [];\n    const regex = /pv\\s+(\\w+)/g;\n    let match;\n    while ((match = regex.exec(output)) !== null) {\n      matches.push(match[1]);\n    }\n    return matches.slice(0, 5);\n  };\n  const handlePawnderClick = async () => {\n    try {\n      const currentPosition = chess.current.fen();\n      const moves = chess.current.history();\n      const lastMove = moves[moves.length - 1];\n\n      // Create a temporary chess instance to get the previous position\n      const tempChess = new Chess();\n      // Replay all moves except the last one\n      for (let i = 0; i < moves.length - 1; i++) {\n        tempChess.move(moves[i]);\n      }\n      const previousPosition = tempChess.fen();\n      const response = await fetch('http://127.0.0.1:5000/pawnder_move', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        mode: 'cors',\n        credentials: 'same-origin',\n        body: JSON.stringify({\n          move: lastMove,\n          position: currentPosition,\n          previous_position: previousPosition\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setAnalysis(data.analysis); // Store the analysis in state\n      console.log(\"Received from backend:\", data);\n    } catch (error) {\n      console.error(\"Error sending position to backend:\", error);\n      setAnalysis(\"Error getting analysis\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: boardRef,\n        style: {\n          width: \"400px\",\n          height: \"400px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePawnderClick,\n        style: {\n          marginTop: \"10px\",\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          backgroundColor: \"#4CAF50\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: \"Pawnder Why!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"5px\",\n          backgroundColor: \"#f9f9f9\",\n          minHeight: \"100px\",\n          maxWidth: \"400px\",\n          whiteSpace: \"pre-wrap\"\n        },\n        children: analysis || \"Click 'Pawnder Why!' to get move analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"200px\",\n        marginLeft: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top Moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), analysisLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Line \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), line.score && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Score: \", line.scoreType === 'cp' ? line.score / 100 : `Mate in ${line.score}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), line.pv && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Moves: \", line.pv.join(' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"1zqkrGx6LVE4o1jrkHyOLwYKEsU=\", false, function () {\n  return [useStockfishEngine];\n});\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Chessground","Chess","useStockfishEngine","jsxDEV","_jsxDEV","ChessBoard","_s","boardRef","chess","groundRef","topMoves","setTopMoves","fen","setFen","current","turn","analysis","setAnalysis","console","log","handleEvaluation","data","parseStockfishOutput","sendCommand","analysisLines","onEvaluation","getDests","dests","Map","moves","verbose","forEach","move","set","from","get","concat","to","handleMove","orig","dest","promotion","newFen","error","turnColor","movable","color","free","events","after","highlight","lastMove","check","_groundRef$current","destroy","_groundRef$current2","output","Array","isArray","slice","matches","regex","match","exec","push","handlePawnderClick","currentPosition","history","length","tempChess","i","previousPosition","response","fetch","method","headers","mode","credentials","body","JSON","stringify","position","previous_position","ok","Error","status","json","style","display","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","padding","fontSize","backgroundColor","border","borderRadius","cursor","minHeight","maxWidth","whiteSpace","marginLeft","map","line","index","score","scoreType","pv","join","_c","$RefreshReg$"],"sources":["/Users/joshuashou/Desktop/Personal/Semantic_Chess_Engine/src/components/ChessBoard.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Chessground } from \"chessground\";\nimport { Chess } from \"chess.js\";\nimport useStockfishEngine from \"./useStockfishEngine\";\nimport \"../../node_modules/chessground/assets/chessground.base.css\";\nimport \"../../node_modules/chessground/assets/chessground.brown.css\";\nimport \"../../node_modules/chessground/assets/chessground.cburnett.css\";\n\nconst ChessBoard = () => {\n  const boardRef = useRef(null);\n  const chess = useRef(new Chess());\n  const groundRef = useRef(null);\n  const [topMoves, setTopMoves] = useState([]);\n  const [fen, setFen] = useState(chess.current.fen());\n  const turn = chess.current.turn() === 'w' ? 'white' : 'black';\n  const [analysis, setAnalysis] = useState(\"\");\n  console.log(\"Hi\")\n\n  const handleEvaluation = useCallback((data) => {\n    console.log(\"handleEvaluation called\");\n    setTopMoves(parseStockfishOutput(data));\n  }, []);\n\n  const { sendCommand, analysisLines } = useStockfishEngine({ onEvaluation: handleEvaluation });\n\n  const getDests = useCallback(() => {\n    const dests = new Map();\n    chess.current.moves({ verbose: true }).forEach(move => {\n      dests.set(move.from, (dests.get(move.from) || []).concat(move.to));\n    });\n    return dests;\n  }, [fen]);\n\n  const handleMove = useCallback((orig, dest) => {\n    try {\n      const move = chess.current.move({ from: orig, to: dest, promotion: \"q\" });\n      if (!move) return \"snapback\";\n      \n      const newFen = chess.current.fen();\n      setFen(newFen);\n      \n      if (sendCommand) {\n        console.log(\"stockfish sending move command\");\n        sendCommand(`position fen ${newFen}`);\n        sendCommand(\"go depth 15\");\n      }\n    } catch (error) {\n      console.error(\"Move error:\", error);\n    }\n  }, [sendCommand]);\n\n  useEffect(() => {\n    groundRef.current = Chessground(boardRef.current, {\n      fen,\n      turnColor: turn,\n      movable: {\n        color: turn,\n        free: false,\n        dests: getDests(),\n        events: { after: handleMove }\n      },\n      highlight: { lastMove: true, check: true }\n    });\n\n    return () => groundRef.current?.destroy();\n  }, []);\n\n  useEffect(() => {\n    groundRef.current?.set({\n      fen,\n      turnColor: turn,\n      movable: { color: turn, dests: getDests() }\n    });\n  }, [fen, turn, getDests]);\n\n  const parseStockfishOutput = (output) => {\n    if (Array.isArray(output)) {\n      // If the output is already an array, return it directly\n      return output.slice(0, 5);\n    }\n  \n    if (typeof output !== \"string\") {\n      console.error(\"Invalid output:\", output);\n      return [];\n    }\n  \n    // Parse the string output\n    const matches = [];\n    const regex = /pv\\s+(\\w+)/g;\n    let match;\n    while ((match = regex.exec(output)) !== null) {\n      matches.push(match[1]);\n    }\n    return matches.slice(0, 5);\n  };\n\n  const handlePawnderClick = async () => {\n    try {\n        const currentPosition = chess.current.fen();\n        const moves = chess.current.history();\n        const lastMove = moves[moves.length - 1];\n        \n        // Create a temporary chess instance to get the previous position\n        const tempChess = new Chess();\n        // Replay all moves except the last one\n        for (let i = 0; i < moves.length - 1; i++) {\n            tempChess.move(moves[i]);\n        }\n        const previousPosition = tempChess.fen();\n        \n        const response = await fetch('http://127.0.0.1:5000/pawnder_move', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Origin': 'http://localhost:3000'\n            },\n            mode: 'cors',\n            credentials: 'same-origin',\n            body: JSON.stringify({\n                move: lastMove,\n                position: currentPosition,\n                previous_position: previousPosition\n            })\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setAnalysis(data.analysis); // Store the analysis in state\n        console.log(\"Received from backend:\", data);\n        \n    } catch (error) {\n        console.error(\"Error sending position to backend:\", error);\n        setAnalysis(\"Error getting analysis\");\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n        <div>\n            <div ref={boardRef} style={{ width: \"400px\", height: \"400px\" }}></div>\n            <button \n                onClick={handlePawnderClick}\n                style={{\n                    marginTop: \"10px\",\n                    padding: \"10px 20px\",\n                    fontSize: \"16px\",\n                    backgroundColor: \"#4CAF50\",\n                    color: \"white\",\n                    border: \"none\",\n                    borderRadius: \"5px\",\n                    cursor: \"pointer\"\n                }}\n            >\n                Pawnder Why!\n            </button>\n            <div\n                style={{\n                    marginTop: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #ccc\",\n                    borderRadius: \"5px\",\n                    backgroundColor: \"#f9f9f9\",\n                    minHeight: \"100px\",\n                    maxWidth: \"400px\",\n                    whiteSpace: \"pre-wrap\"\n                }}\n            >\n                {analysis || \"Click 'Pawnder Why!' to get move analysis\"}\n            </div>\n        </div>\n        <div style={{ width: \"200px\", marginLeft: \"20px\" }}>\n            <h3>Top Moves</h3>\n            {analysisLines.map((line, index) => (\n                <div key={index}>\n                    <div>Line {index + 1}:</div>\n                    {line.score && (\n                        <div>Score: {line.scoreType === 'cp' ? line.score / 100 : `Mate in ${line.score}`}</div>\n                    )}\n                    {line.pv && <div>Moves: {line.pv.join(' ')}</div>}\n                </div>\n            ))}\n        </div>\n    </div>\n);\n};\n\nexport default ChessBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}